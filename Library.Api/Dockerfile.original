# # Этот этап используется при запуске из VS в быстром режиме (по умолчанию для конфигурации отладки)
# FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
# USER $APP_UID
# WORKDIR /app
# EXPOSE 8080
# EXPOSE 8081

# # Этот этап используется для сборки проекта службы
# FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
# ARG BUILD_CONFIGURATION=Release
# WORKDIR /src
# COPY Library/Library.Api/Library.Api.csproj Library/Library.Api/
# RUN dotnet restore Library/Library.Api/Library.Api.csproj
# COPY Library/Library.Api/. Library/Library.Api/
# WORKDIR /src/Library/Library.Api
# RUN dotnet build Library.Api.csproj -c $BUILD_CONFIGURATION -o /app/build

# # Этот этап используется для публикации проекта службы, который будет скопирован на последний этап
# FROM build AS publish
# ARG BUILD_CONFIGURATION=Release
# RUN dotnet publish Library.Api.csproj -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

# # Этот этап используется в рабочей среде или при запуске из VS в обычном режиме (по умолчанию, когда конфигурация отладки не используется)
# FROM base AS final
# WORKDIR /app
# COPY --from=publish /app/publish .
# ENTRYPOINT ["dotnet", "Library.Api.dll"]

# Используем базовый образ .NET SDK для сборки
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build

# Устанавливаем рабочую директорию
WORKDIR /src

# Копируем файлы проекта
COPY ./Library/*.csproj ./Library/
COPY ./Library.Application/*.csproj ./Library/Application/
COPY ./Library.Infrastructure/*.csproj ./Library/Infrastructure/
COPY ./Library.Api/*.csproj ./Library/Api/

# Восстанавливаем зависимости
RUN dotnet restore ./Library.Api/Library.Api.csproj

# Копируем все файлы приложения
COPY ./Library ./Library

# Собираем проект
RUN dotnet build ./Library.Api/Library.Api.csproj -c Release -o /app/build

# Создаем финальный образ
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS final

# Копируем собранное приложение в финальный образ
WORKDIR /app
COPY --from=build /app/build .

# Открываем порт
EXPOSE 80

# Запускаем приложение
ENTRYPOINT ["dotnet", "Library.Api.dll"]